About class Name(object)
In Python 3, you do not need to add the (object) after the name of the class, but the Python com-
munity believes in “explicit is better than implicit,” so I and other Python experts have decided to include
it. You may run into code that does not have (object) after simple classes, and those classes are
perfectly ﬁne and will work with classes you create that do have (object). At this point it is simply
extra documentation and has no impact on how your classes work.

In Python 2, there was a difference between the two types of classes, but now you don’t have to worry
about it. The only tricky part to using (object) involves the mental gymnastics of saying “class Name
is a class of type object.” That may sound confusing to you now, since it’s a class that’s a name object
that’s a class, but don’t feel bad about that. Just think of class Name(object) as saying “this is a
basic simple class,” and you’ll be ﬁne.

Finally, in the future the styles and tastes of Python programmers may change and this explicit use of
(object) might be seen as a sign that you are a bad programmer. If that happens, simply stop using
it, or tell them, “Python Zen says explicit is better than implicit.”
